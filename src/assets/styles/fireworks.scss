@import "./mixin.scss";
// 定义变量
$color-green: rgb(59, 201, 22);
$color-pink: rgb(255, 102, 159);
$color-blue: rgb(74, 171, 255);
$color-yellow: rgb(255, 198, 102);
$color-green-transparent: rgba(59, 201, 22, 0.5);
$color-pink-transparent: rgba(255, 102, 159, 0.5);
$color-blue-transparent: rgba(74, 171, 255, 0.5);
$color-yellow-transparent: rgba(255, 198, 102, 0.5);

// 定义变量,是一个数组 存储小球的运动轨迹
// scss中的数组使用的是 () 来表示
$moves: (
  (
    startX: 0,
    startY: 0,
    endX: 0,
    endY: 55,
    width: 6,
    height: 6,
    background: $color-green
  ),
  (
    startX: 0,
    startY: 0,
    endX: 15,
    endY: 60,
    width: 4,
    height: 4,
    background: $color-pink-transparent
  ),
  (
    startX: 0,
    startY: 0,
    endX: 35,
    endY: 45,
    width: 4,
    height: 4,
    background: $color-blue-transparent
  ),
  (
    startX: 0,
    startY: 0,
    endX: 50,
    endY: 25,
    width: 6,
    height: 6,
    background: $color-yellow
  ),
  (
    startX: 0,
    startY: 0,
    endX: 60,
    endY: 0,
    width: 2,
    height: 2,
    background: $color-pink-transparent
  ),
  (
    startX: 0,
    startY: 0,
    endX: 50,
    endY: -25,
    width: 6,
    height: 6,
    background: $color-blue
  ),
  (
    startX: 0,
    startY: 0,
    endX: 40,
    endY: -30,
    width: 3,
    height: 3,
    background: $color-green-transparent
  ),
  (
    startX: 0,
    startY: 0,
    endX: 20,
    endY: -55,
    width: 5,
    height: 5,
    background: $color-pink
  ),
  (
    startX: 0,
    startY: 0,
    endX: 5,
    endY: -45,
    width: 4,
    height: 4,
    background: $color-green-transparent
  ),
  (
    startX: 0,
    startY: 0,
    endX: -20,
    endY: -50,
    width: 2,
    height: 2,
    background: $color-pink-transparent
  ),
  (
    startX: 0,
    startY: 0,
    endX: -40,
    endY: -50,
    width: 2,
    height: 2,
    background: $color-green-transparent
  ),
  (
    startX: 0,
    startY: 0,
    endX: -55,
    endY: -30,
    width: 4,
    height: 4,
    background: $color-blue
  ),
  (
    startX: 0,
    startY: 0,
    endX: -55,
    endY: -10,
    width: 3,
    height: 3,
    background: $color-yellow-transparent
  ),
  (
    startX: 0,
    startY: 0,
    endX: -55,
    endY: -5,
    width: 3,
    height: 3,
    background: $color-green-transparent
  ),
  (
    startX: 0,
    startY: 0,
    endX: -35,
    endY: -7,
    width: 2,
    height: 2,
    background: $color-pink-transparent
  ),
  (
    startX: 0,
    startY: 0,
    endX: -45,
    endY: 10,
    width: 4,
    height: 4,
    background: $color-yellow-transparent
  ),
  (
    startX: 0,
    startY: 0,
    endX: -50,
    endY: 25,
    width: 6,
    height: 6,
    background: $color-pink
  ),
  (
    startX: 0,
    startY: 0,
    endX: -40,
    endY: 35,
    width: 4,
    height: 4,
    background: $color-green-transparent
  )
);

// 定义一个方法,给小球赋予样式
@mixin move($index) {
  // nth是用来获取一个数组中的某一项
  $item: nth($moves, $index);
  $keyframesName: "move" + $index; // 动画的名称,相同会覆盖
  $animationTime: 0.75s; // 动画运行的时间
  $animationType: "linear"; // 动画运行的模式
  $animationIterator: 1; //  动画运行的次数
  // map-get是获取一个对象的某一个属性值;
  $width: map-get($item, width); // 获取的是 $item的宽度
  $height: map-get($item, height); // 高度
  $background: map-get($item, background); //背景颜色
  $startX: map-get($item, startX); // 开始运动的x位置
  $startY: map-get($item, startY); // 开始运动的y位置
  $endX: map-get($item, endX); // 结束运动的x位置
  $endY: map-get($item, endY); // 结束运动的y位置

  // 设置css
  width: px2rem($width);
  height: px2rem($height);
  background: #{$background};
  // #{} 是插值语句: 可以在选择器或属性名中使用变量：
  // 定义 animation
  animation: #{$keyframesName} #{$animationTime} #{$animationType} #{$animationIterator};
  // 定义 动画
  @keyframes #{$keyframesName} {
    0% {
      // transfrom动画必须合并写:
      transform: translate3d(px2rem($startX), px2rem($startY), 0) scale(0);
      opacity: 0;
    }
    50% {
      transform: translate3d(px2rem($endX * 0.5), px2rem($endY * 0.5), 0) scale(1);
      opacity: 1;
    }
    90% {
      transform: translate3d(px2rem($endX), px2rem($endY), 0) scale(1);
      opacity: 1;
    }
    100% {
      transform: translate3d(px2rem($endX * 1.2), px2rem($endY * 1.2), 0) scale(1);
      opacity: 0;
    }
  }
}
